{"version":3,"sources":["components/LeftMenu.js","components/LeftTab.js","components/Contents.js","components/PageTemplate.js","App.js","serviceWorker.js","index.js"],"names":["LeftMenuBlock","styled","div","LeftMenu","menuWrapper","useRef","menuSelector","selectToggle","e","preventDefault","i","current","children","length","classList","remove","target","add","style","offsetTop","ref","className","onClick","LeftTabBlock","LeftTab","ContentsBlock","Contents","copied","stacks","useEffect","backgroundImage","innerHTML","setTimeout","PageTemplateBlock","PageTemplate","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"izBAGA,IAAMA,EAAgBC,IAAOC,IAAV,KAwDJC,MA3Bf,WACE,IAAMC,EAAcC,iBAAO,MACrBC,EAAeD,iBAAO,MAE5B,SAASE,EAAaC,GACpBA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAYO,QAAQC,SAASC,OAAQH,IACvDN,EAAYO,QAAQC,SAASF,GAAGI,UAAUC,OAAO,YAEnDP,EAAEQ,OAAOF,UAAUG,IAAI,YACvBX,EAAaK,QAAQO,MAArB,eAAqCV,EAAEQ,OAAOG,UAA9C,MAGF,OACE,kBAACnB,EAAD,KACE,wBAAIoB,IAAKhB,GACP,wBAAIiB,UAAU,WAAWC,QAASf,GAAlC,SAGA,wBAAIe,QAASf,GAAb,WACA,wBAAIe,QAASf,GAAb,YAEF,0BAAMa,IAAKd,M,uxBClDjB,IAAMiB,EAAetB,IAAOC,IAAV,KAuDHsB,MAjBf,WACE,OACE,kBAACD,EAAD,KACE,kDAEE,6BACA,mDAEF,kBAAC,EAAD,MACA,yBAAKF,UAAU,YACb,oMACA,iE,upCClDR,IAAMI,EAAgBxB,IAAOC,IAAV,KAmIJwB,MAtEf,WACE,IAAMC,EAAStB,iBAAO,MAChBuB,EAASvB,iBAAO,MAkBtB,OARAwB,qBAAU,WACR,IAAK,IAAInB,EAAI,EAAGA,EAAIkB,EAAOjB,QAAQC,SAASC,OAAQH,IAClDkB,EAAOjB,QAAQC,SACbF,GACAQ,MAAMY,gBAFR,oFAEuGF,EAAOjB,QAAQC,SAASF,GAAGqB,UAFlI,oBAID,IAGD,kBAACN,EAAD,KACE,iCACE,8DACA,6OAGE,6BAHF,iOAKE,6BALF,ySAOE,6BAPF,yFASE,0BAAMJ,UAAU,QAAQC,QA7BhC,SAAkBd,GAChBA,EAAEC,iBACFkB,EAAOhB,QAAQO,MAAf,4BACAc,YAAW,WACTL,EAAOhB,QAAQO,MAAf,8BACC,OAwBG,uBAEE,0BAAMG,UAAU,SAASD,IAAKO,GAA9B,YAXJ,4EAkBF,iCACE,0CACA,8QAGE,6BAHF,4MAKE,6BALF,wKAQA,yBAAKN,UAAU,SAASD,IAAKQ,GAC3B,uCACA,oCACA,qCACA,mDACA,sCACA,4CACA,sCACA,qCACA,sCACA,wCACA,yC,yGC5HV,IAAMK,EAAoBhC,IAAOC,IAAV,KASRgC,MAJf,YAAqC,IAAbtB,EAAY,EAAZA,SACtB,OAAO,kBAACqB,EAAD,KAAoBrB,I,MCMduB,MATf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c2f71140.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LeftMenuBlock = styled.div`\r\n  margin-top: 60px;\r\n  margin-left: 55px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  li {\r\n    color: #999;\r\n    font-size: 18px;\r\n    font-weight: lighter;\r\n    letter-spacing: 0.05rem;\r\n    margin-bottom: 50px;\r\n    cursor: pointer;\r\n  }\r\n  li.selected {\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  span {\r\n    width: 5px;\r\n    height: 18px;\r\n    background: #fff;\r\n    position: absolute;\r\n    left: -12.5px;\r\n    top: 0;\r\n    transition: 0.5s;\r\n  }\r\n`;\r\n\r\nfunction LeftMenu() {\r\n  const menuWrapper = useRef(null);\r\n  const menuSelector = useRef(null);\r\n\r\n  function selectToggle(e) {\r\n    e.preventDefault();\r\n    for (var i = 0; i < menuWrapper.current.children.length; i++) {\r\n      menuWrapper.current.children[i].classList.remove('selected');\r\n    }\r\n    e.target.classList.add('selected');\r\n    menuSelector.current.style = `top :${e.target.offsetTop}px`;\r\n  }\r\n\r\n  return (\r\n    <LeftMenuBlock>\r\n      <ul ref={menuWrapper}>\r\n        <li className=\"selected\" onClick={selectToggle}>\r\n          ABOUT\r\n        </li>\r\n        <li onClick={selectToggle}>PROJECT</li>\r\n        <li onClick={selectToggle}>CONTACT</li>\r\n      </ul>\r\n      <span ref={menuSelector}></span>\r\n    </LeftMenuBlock>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport LeftMenu from './LeftMenu';\r\n\r\nconst LeftTabBlock = styled.div`\r\n  width: 20%;\r\n  min-width: 300px;\r\n  height: 100vh;\r\n  background: #212529;\r\n  box-shadow: 10px 0px 34px -15px rgba(0, 0, 0, 0.75);\r\n  position: relative;\r\n  h1 {\r\n    margin-top: 50px;\r\n    margin-left: 40px;\r\n    color: #ffffff;\r\n    font-size: 14px;\r\n    font-weight: lighter;\r\n    letter-spacing: 0.05rem;\r\n  }\r\n  h1 strong {\r\n    margin-top: 2px;\r\n    font-size: 22px;\r\n    color: #ffffff;\r\n    font-weight: bold;\r\n  }\r\n  .descript {\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 30px;\r\n    transform: translateX(-50%);\r\n  }\r\n  p {\r\n    text-align: center;\r\n    font-size: 10px;\r\n    color: #ffffff;\r\n    font-weight: lighter;\r\n    margin-bottom: 5px;\r\n    letter-spacing: 0.02rem;\r\n  }\r\n`;\r\n\r\nfunction LeftTab() {\r\n  return (\r\n    <LeftTabBlock>\r\n      <h1>\r\n        FRONT-END DEVELOPER\r\n        <br />\r\n        <strong>LEE SEUNG HYUN</strong>\r\n      </h1>\r\n      <LeftMenu />\r\n      <div className=\"descript\">\r\n        <p>본 사이트는 상업적 목적이 없는 개인 포트폴리오 사이트 입니다.</p>\r\n        <p>This site is made with React.js</p>\r\n      </div>\r\n    </LeftTabBlock>\r\n  );\r\n}\r\n\r\nexport default LeftTab;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ContentsBlock = styled.div`\r\n  width: 80%;\r\n  section {\r\n    margin-left: 50px;\r\n    margin-top: 50px;\r\n  }\r\n  section:nth-of-type(2) {\r\n    margin-top: 30px;\r\n  }\r\n  h2 {\r\n    color: #212529;\r\n    font-weight: 900;\r\n    font-size: 2rem;\r\n  }\r\n  p {\r\n    color: #212529;\r\n    font-size: 16px;\r\n    letter-spacing: 0.03rem;\r\n    line-height: 24px;\r\n    margin-top: 15px;\r\n    margin-left: 10px;\r\n  }\r\n  .email {\r\n    color: #1c7ed6;\r\n    cursor: pointer;\r\n    position: relative;\r\n  }\r\n  .copied {\r\n    background: #212529;\r\n    bottom: -15px;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    font-size: 12px;\r\n    height: 25px;\r\n    left: 50%;\r\n    opacity: 0;\r\n    position: absolute;\r\n    text-align: center;\r\n    transform: translateX(-50%);\r\n    transition: 0.5s;\r\n    width: 60px;\r\n  }\r\n  .stacks {\r\n    width: 600px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n  }\r\n  .stacks span {\r\n    border: 2px solid #212529;\r\n    border-radius: 5px;\r\n    font-size: 0;\r\n    height: 80px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    width: 80px;\r\n    background-size: cover;\r\n  }\r\n`;\r\n\r\nfunction Contents() {\r\n  const copied = useRef(null);\r\n  const stacks = useRef(null);\r\n\r\n  function copyText(e) {\r\n    e.preventDefault();\r\n    copied.current.style = `bottom :-28px; opacity :1`;\r\n    setTimeout(function () {\r\n      copied.current.style = `bottom :-15px; opacity :0`;\r\n    }, 500);\r\n  }\r\n\r\n  useEffect(() => {\r\n    for (var i = 0; i < stacks.current.children.length; i++) {\r\n      stacks.current.children[\r\n        i\r\n      ].style.backgroundImage = `url(https://github.com/lsh58/react_portfolio/blob/master/src/asset/stacks/${stacks.current.children[i].innerHTML}.png?raw=true)`;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ContentsBlock>\r\n      <section>\r\n        <h2>안녕하세요</h2>\r\n        <p>\r\n          만들기를 좋아하고 삶에서 일의 의미와 가치를 중요하게 생각하는\r\n          이승현입니다.\r\n          <br /> 프론트엔드 개발자로 일하기 위해 준비하고 있으며, 기술과\r\n          디자인에 관심이 많습니다.\r\n          <br /> 공통된 목적이 있는 사람들과 함께 지낼 때 행복감을 느끼며, 편한\r\n          사람들과 마시는 맥주와 커피를 가장 좋아합니다.\r\n          <br />\r\n          저에 대해 궁금한 점이 있으시면&nbsp;\r\n          <span className=\"email\" onClick={copyText}>\r\n            tmdgusdl58@gmail.com\r\n            <span className=\"copied\" ref={copied}>\r\n              Copied!\r\n            </span>\r\n          </span>\r\n          로 연락 주세요. 감사합니다.\r\n        </p>\r\n      </section>\r\n      <section>\r\n        <h2>Tech Stack</h2>\r\n        <p>\r\n          온라인 컨텐츠 제작 업무를 거쳐 현재는 프론트엔드 개발분야로 배움의\r\n          폭을 넓히고 있습니다.\r\n          <br /> HTML5, CSS3, Javascript(ES6), ajax, React, Sass 등을 활용한\r\n          퍼블리싱과 프론트 영역 개발 경험이 있습니다.\r\n          <br /> Javascript 언어를 가장 좋아하고, 현재는 React 공부에 매진하고\r\n          있습니다.\r\n        </p>\r\n        <div className=\"stacks\" ref={stacks}>\r\n          <span>react</span>\r\n          <span>js</span>\r\n          <span>es6</span>\r\n          <span>styled-components</span>\r\n          <span>sass</span>\r\n          <span>restfulapi</span>\r\n          <span>html</span>\r\n          <span>css</span>\r\n          <span>ajax</span>\r\n          <span>jquery</span>\r\n          <span>php</span>\r\n        </div>\r\n      </section>\r\n    </ContentsBlock>\r\n  );\r\n}\r\n\r\nexport default Contents;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PageTemplateBlock = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nfunction PageTemplate({ children }) {\r\n  return <PageTemplateBlock>{children}</PageTemplateBlock>;\r\n}\r\n\r\nexport default PageTemplate;\r\n","import React from 'react';\nimport LeftTab from './components/LeftTab';\nimport Contents from './components/Contents';\nimport PageTemplate from './components/PageTemplate';\nimport './App.css';\n\nfunction App() {\n  return (\n    <PageTemplate>\n      <LeftTab />\n      <Contents />\n    </PageTemplate>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}